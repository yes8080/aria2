name: Package aria2 with dl.cmd

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up environment
      run: sudo apt-get install -y python3 python3-pip zip unzip

    - name: Install dependencies
      run: pip install requests

    - name: Run business logic script
      run: python3 scripts/process_release.py

    - name: Set environment variables from file
      run: |
        cat env_vars.txt >> $GITHUB_ENV

    - name: Debug environment variables
      run: |
        echo "VERSION: $VERSION"
        echo "TAG_ALREADY_EXISTS: $TAG_ALREADY_EXISTS"
        echo "BODY: $BODY"

    - name: Create Release
      id: create_release_step
      if: env.TAG_ALREADY_EXISTS == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: aria2 ${{ env.VERSION }}
        body: ${{ env.BODY }}
        draft: false
        prerelease: false

    - name: Debug create_release output
      if: env.TAG_ALREADY_EXISTS == 'false'
      run: |
        echo "Create release output: ${{ steps.create_release_step.outputs.upload_url }}"
        echo "upload_url=${{ steps.create_release_step.outputs.upload_url }}" >> $GITHUB_ENV

    - name: Upload Release Asset
      if: env.TAG_ALREADY_EXISTS == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_step.outputs.upload_url }}
        asset_path: ./aria2-${{ env.VERSION }}-win-64bit.zip
        asset_name: aria2-${{ env.VERSION }}-win-64bit.zip
        asset_content_type: application/zip

    - name: Notify if tag already exists
      if: env.TAG_ALREADY_EXISTS == 'true'
      run: echo "Tag v${{ env.VERSION }} already exists. Skipping release creation."
