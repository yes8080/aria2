name: Monitor Aria2 Releases

on:
  schedule:
    - cron: '0 * * * *' # 每小时检查一次
  workflow_dispatch: # 允许手动触发

jobs:
  check_and_update:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for new release
        id: check_release
        run: |
          $latestReleaseUrl = "https://api.github.com/repos/aria2/aria2/releases/latest"
          $response = Invoke-RestMethod -Uri $latestReleaseUrl -Method Get -Headers @{"Accept"="application/vnd.github.v3+json"}
          $latestTag = $response.tag_name.TrimStart("v")
          
          if (Test-Path .latest_version) {
            $currentTag = Get-Content .latest_version
          } else {
            $currentTag = ""
          }
          
          if ($currentTag -ne $latestTag) {
            echo "::set-output name=new_version::$latestTag"
            Set-Content -Path .latest_version -Value $latestTag
          } else {
            Write-Host "No new version found."
          }
        shell: pwsh

      - name: Download and process new release
        if: steps.check_release.outputs.new_version != ''
        id: download_process
        run: |
          $NEW_VERSION = '${{ steps.check_release.outputs.new_version }}'
          $URL = "https://github.com/aria2/aria2/releases/download/v${NEW_VERSION}/"
          Invoke-WebRequest "${URL}aria2-${NEW_VERSION}-win-64bit-build1.zip" -OutFile aria2-64.zip
          Invoke-WebRequest "${URL}aria2-${NEW_VERSION}-win-32bit-build1.zip" -OutFile aria2-32.zip
          Expand-Archive aria2-64.zip -DestinationPath .
          Expand-Archive aria2-32.zip -DestinationPath .
          Copy-Item ./dl.bat "aria2-${NEW_VERSION}-win-64bit-build1/"
          Copy-Item ./dl.bat "aria2-${NEW_VERSION}-win-32bit-build1/"
          Compress-Archive -Path "aria2-${NEW_VERSION}-win-64bit-build1" -DestinationPath "aria2-${NEW_VERSION}-win-64bit-build1-with-dl-bat.zip"
          Compress-Archive -Path "aria2-${NEW_VERSION}-win-32bit-build1" -DestinationPath "aria2-${NEW_VERSION}-win-32bit-build1-with-dl-bat.zip"
        shell: pwsh

      - name: Create Release
        if: steps.download_process.outcome == 'success'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.check_release.outputs.new_version }}
          name: "Aria2 with dl.bat included"
          body: "This release includes the original Aria2 binaries along with a custom dl.bat script."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: steps.create_release.outcome == 'success'
        run: |
          $NEW_VERSION = '${{ steps.check_release.outputs.new_version }}'
          gh release upload "v${NEW_VERSION}" `
            "aria2-${NEW_VERSION}-win-64bit-build1-with-dl-bat.zip" `
            "aria2-${NEW_VERSION}-win-32bit-build1-with-dl-bat.zip" `
            --clobber
        shell: pwsh
